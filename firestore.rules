rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    match /motds/{motdId} {
      allow read: if isActivated();
      allow write: if isGm()
    }

    match /items/{itemId} {
      allow read: if isActivated();
      allow write: if isGm()
    }

    match /markets/{marketId} {
      allow read: if isActivated();
      allow write: if isGm()
    }

    match /sections/{sectionId} {
      allow read: if isActivated();
      allow write: if isGm()
    }

    match /books/{bookId} {
      allow read: if isActivated();
      allow write: if isGm()
    }

    match /traps/{trapId} {
      allow read: if isActivated();
      allow write: if isGm()
    }

    match /currencies/{currencyId} {
      allow read: if isActivated();
      allow write: if isGm();
    }

    match /divinations/{divinationId} {
      allow read: if isActivated();
      allow write: if isGm();
    }

    match /transactions/{txId} {
      allow read: if isActivated();
      allow write: if isGm();
      allow create: if isGm();
    }

    match /characters/{characterId} {
      allow read: if isActivated();
      allow write: if isGm();
    }

    match /users/{userId} {
      allow read: if isActivated() || isUser(userId);
      allow write: if isGm();
    }

    match /files/{fileId} {
      allow read: if isActivated();
      allow write: if isGm();
    }

    match /{document=**} {
      allow read, write: if false;
    }

    function isActivated() {
      return request.auth != null && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.isActivated
    }

    function isUser(uid) {
      return request.auth.uid == uid;
    }
    
    function isGm() {
      return isActivated() && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.gm
    }
  }
}
