rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    match /motds/{motdId} {
      allow read: if isSignedIn();
      allow write: if isGm()
    }

    match /items/{itemId} {
      allow read: if isSignedIn();
      allow write: if isGm()
    }

    match /markets/{marketId} {
      allow read: if isSignedIn();
      allow write: if isGm()
    }

    match /sections/{sectionId} {
      allow read: if isSignedIn();
      allow write: if isGm()
    }

    match /books/{bookId} {
      allow read: if isSignedIn();
      allow write: if isGm()
    }

    match /traps/{trapId} {
      allow read: if isSignedIn();
      allow write: if isGm()
    }

    match /currencies/{currencyId} {
      allow read: if isSignedIn();
      allow write: if isGm();
    }

    match /divinations/{divinationId} {
      allow read: if isSignedIn();
      allow write: if isGm();
    }

    match /transactions/{txId} {
      allow read: if isGm() || isSignedIn();
      allow write: if isGm()
      allow create: if isGm() || request.auth.uid == request.resource.data.createdByUserId
    }

    match /characters/{characterId} {
      allow read;
      allow write: if isGm();
    }

    match /users/{userId} {
      allow write: if isUserOrGm(userId);
      allow read: if isSignedIn();
    }

    match /{document=**} {
      allow read, write: if false;
    }

    function isSignedIn() {
      return request.auth != null
    }

    function isGm() {
      return get(/databases/$(database)/documents/users/$(request.auth.uid)).data.gm
    }

    function isResourceUser() {
      return resource.data.userId in ["", request.auth.uid]
    }

    function isAnyResourceUserOrGm() {
      return isGm() || request.auth.uid in  resource.data.userId
    }

    function isResourceUserOrGm() {
      return isGm() || isResourceUser()
    }

    function isUser(userId) {
      return request.auth.uid == userId;
    }

    function isUserOrGm(userId) {
      return isUser(userId) || isGm()
    }
  }
}
